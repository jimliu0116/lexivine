generator client { provider = "prisma-client-js" }
datasource db { provider = "sqlite"; url = env("DATABASE_URL") }

model User {
  id                String   @id @default(cuid())
  email             String?  @unique
  name              String?
  image             String?
  createdAt         DateTime @default(now())
  stripeCustomerId  String?
  plan              Plan     @default(FREE)
  subscription      Subscription?
  progress          Progress[]
  studyLogs         StudyLog[]
}

model Subscription {
  id              String   @id @default(cuid())
  userId          String   @unique
  stripeSubId     String   @unique
  plan            Plan
  status          String
  currentPeriodEnd DateTime?
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Plan { FREE PRO PLUS TEAM }

model Course {
  id          String   @id @default(cuid())
  title       String
  level       String   // A1-C2
  difficulty  String   // Beginner / Intermediate / Advanced
  isPremium   Boolean  @default(false)
  createdAt   DateTime @default(now())
  lessons     Lesson[]
}

model Lesson {
  id          String   @id @default(cuid())
  title       String
  order       Int      @default(1)
  courseId    String
  requiresLessonId String?
  minScoreToUnlock Int @default(0)
  audioUrl    String?
  captionsVtt String?
  course      Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  exercises   Exercise[]
}

enum ExerciseType { dialog grammar pron quiz }

model Exercise {
  id        String       @id @default(cuid())
  type      ExerciseType
  content   Json
  audioUrl  String?
  lessonId  String
  lesson    Lesson       @relation(fields: [lessonId], references: [id], onDelete: Cascade)
}

model Progress {
  id        String   @id @default(cuid())
  userId    String
  lessonId  String
  score     Int      @default(0)
  xp        Int      @default(0)
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  lesson    Lesson   @relation(fields: [lessonId], references: [id], onDelete: Cascade)
}

model StudyLog {
  id        String   @id @default(cuid())
  userId    String
  minutes   Int
  date      DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(cuid())
  email            String?        @unique
  name             String?
  image            String?
  createdAt        DateTime       @default(now())
  stripeCustomerId String?
  plan             String         @default("FREE")  // 原本 enum Plan

  subscription     Subscription?
  progress         Progress[]
  studyLogs        StudyLog[]
}

model Subscription {
  id               String    @id @default(cuid())
  userId           String    @unique
  status           String?
  priceId          String?
  currentPeriodEnd DateTime?

  user             User      @relation(fields: [userId], references: [id])
}

model Course {
  id          String   @id @default(cuid())
  title       String
  level       String            // A1-C2
  difficulty  String            // Beginner / Intermediate / Advanced
  isPremium   Boolean  @default(false)
  createdAt   DateTime @default(now())

  lessons     Lesson[]
}

model Lesson {
  id                String     @id @default(cuid())
  courseId          String
  title             String
  order             Int        @default(0)

  // 解鎖條件
  requiresLessonId  String?
  minScoreToUnlock  Int?       @default(0)

  course            Course     @relation(fields: [courseId], references: [id])
  exercises         Exercise[]
  progress          Progress[]

  @@index([courseId])
  @@index([requiresLessonId])
}

model Exercise {
  id        String   @id @default(cuid())
  type      String                 // 原本 enum ExerciseType
  content   String                 // 原本 Json（存 JSON 字串）
  audioUrl  String?
  lessonId  String

  lesson    Lesson   @relation(fields: [lessonId], references: [id], onDelete: Cascade)

  @@index([lessonId])
}

model Progress {
  id              String    @id @default(cuid())
  userId          String
  lessonId        String
  score           Int       @default(0)

  fluency         Float?
  pronunciation   Float?
  grammar         Float?

  updatedAt       DateTime  @updatedAt

  user            User      @relation(fields: [userId], references: [id])
  lesson          Lesson    @relation(fields: [lessonId], references: [id])

  @@index([userId])
  @@index([lessonId])
  @@unique([userId, lessonId])
}

model StudyLog {
  id        String   @id @default(cuid())
  userId    String
  minutes   Int      @default(0)
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}
